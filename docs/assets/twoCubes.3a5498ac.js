import{b as C}from"./basic.vert.1a501b69.js";import{p as R}from"./position.frag.ff5a6327.js";import{p as v,u as P,v as y,a as S,g as U,b as E}from"./matrix.2969bbb4.js";import{o as T}from"./resizeObserver.84f51a4b.js";function H(o,n){const{on:e,off:a}=V(n),t=A(o,e);return async()=>{(await t)(),a()}}const L=["groups","offsets"];function V(o){const n=document.createElement("select"),e=L.map(t=>{const r=document.createElement("option");return r.value=t,r.innerText=t,r});n.append(...e),o.append(n);let a;return{on:async(t,r)=>{a&&n.removeEventListener("input",a),a=async({target:u})=>{const{value:s}=u||{};await t(s)},n.addEventListener("input",a),r&&await a({target:n})},off:()=>{a&&n.removeEventListener("input",a),o.removeChild(n)}}}function q(o){const n={position:{x:2,y:0,z:-8},rotation:{x:0,y:0,z:0},scale:{x:1,y:1,z:1}},e={position:{x:-2,y:0,z:-8},rotation:{x:0,y:0,z:0},scale:{x:1,y:1,z:1}};return function(t){t=t/1e3,n.rotation.x=Math.sin(t),n.rotation.y=Math.cos(t);const r=U(o,n.position,n.rotation,n.scale);e.rotation.x=Math.cos(t),e.rotation.y=Math.sin(t);const u=U(o,e.position,e.rotation,e.scale);return[r,u]}}async function A(o,n){var b,M;const{gpu:e}=navigator,a=await((b=e==null?void 0:e.requestAdapter)==null?void 0:b.call(e,{}));if(!a)throw Error("WebGPU not support! Adapter not found!");const t=(M=e.getPreferredCanvasFormat)==null?void 0:M.call(e);if(!t)throw Error("WebGPU not support! Adapter not found!");const r=await a.requestDevice(),u=o.getContext("webgpu"),{devicePixelRatio:s=1}=window;u.configure({device:r,format:t,alphaMode:"opaque"});const f=r.createRenderPipeline({vertex:{module:r.createShaderModule({code:C}),entryPoint:"main",buffers:[{attributes:[{shaderLocation:0,offset:0,format:`float32x${v}`},{shaderLocation:1,offset:4*v,format:`float32x${P}`}],arrayStride:4*(v+P),stepMode:"vertex"}]},fragment:{module:r.createShaderModule({code:R}),entryPoint:"main",targets:[{format:t}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"},layout:"auto"}),G=r.createBuffer({size:y.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});r.queue.writeBuffer(G,0,y,0,y.length);let l,h;await n(p=>{let c;p==="offsets"?c=D(r,f,2):c=_,l=c(r,f),h=c(r,f)},!0);let g,m;const B=p=>{const{width:c,height:w,clientHeight:d,clientWidth:x}=o;if(p&&c===x*s&&w===d*s)return;const i={width:o.clientWidth*s,height:o.clientHeight*s};Object.assign(o,i),g=r.createTexture({size:i,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}).createView(),m=q(i.width/i.height)};B();const z=T(o,B),O=S(p=>{if(!m||!g)return;const[c,w]=m(p);l.write(c),h.write(w);const d=r.createCommandEncoder(),x=u.getCurrentTexture().createView(),i=d.beginRenderPass({colorAttachments:[{view:x,clearValue:{r:.5,g:.5,b:.5,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:g,depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}});i.setPipeline(f),i.setVertexBuffer(0,G),l.setGroup(i),i.draw(E),h.setGroup(i),i.draw(E),i.end(),r.queue.submit([d.finish()])});return()=>{O(),z()}}function _(o,n){const e=o.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),a=o.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:e}}]});return{write(t){o.queue.writeBuffer(e,0,t)},setGroup(t){t.setBindGroup(0,a)}}}function D(o,n,e){const a=o.createBuffer({size:256*e+64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});let t=0;return()=>{if(t>=e)throw Error("");const r=256*t++,u=o.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:a,offset:r,size:4*4*4}}]});return{write(s){o.queue.writeBuffer(a,r,s)},setGroup(s){s.setBindGroup(0,u)}}}}export{H as render};
