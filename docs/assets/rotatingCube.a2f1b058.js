var b=`@binding(0) @group(0) var<uniform> mvpMatrix : mat4x4<f32>;\r
\r
struct VertexOutput {\r
    @builtin(position) Position : vec4<f32>,\r
    @location(0) fragUV : vec2<f32>,\r
    @location(1) fragPosition: vec4<f32>\r
};\r
\r
@vertex\r
fn main(\r
    @location(0) position : vec4<f32>,\r
    @location(1) uv : vec2<f32>\r
) -> VertexOutput {\r
    var output : VertexOutput;\r
    output.Position = mvpMatrix * position;\r
    output.fragUV = uv;\r
    output.fragPosition = 0.5 * (position + vec4<f32>(1.0, 1.0, 1.0, 1.0));\r
    return output;\r
}`,S=`@fragment\r
fn main(\r
    @location(0) fragUV: vec2<f32>,\r
    @location(1) fragPosition: vec4<f32>\r
) -> @location(0) vec4<f32> {\r
    return fragPosition;\r
}`;const V={vertex:new Float32Array([1,-1,1,1,1,-1,-1,1,0,1,-1,-1,-1,0,0,1,-1,-1,1,0,1,-1,1,1,1,-1,-1,-1,0,0,1,1,1,1,1,1,-1,1,0,1,1,-1,-1,0,0,1,1,-1,1,0,1,1,1,1,1,1,-1,-1,0,0,-1,1,1,1,1,1,1,1,0,1,1,1,-1,0,0,-1,1,-1,1,0,-1,1,1,1,1,1,1,-1,0,0,-1,-1,1,1,1,-1,1,1,0,1,-1,1,-1,0,0,-1,-1,-1,1,0,-1,-1,1,1,1,-1,1,-1,0,0,1,1,1,1,1,-1,1,1,0,1,-1,-1,1,0,0,-1,-1,1,0,0,1,-1,1,1,0,1,1,1,1,1,1,-1,-1,1,1,-1,-1,-1,0,1,-1,1,-1,0,0,1,1,-1,1,0,1,-1,-1,1,1,-1,1,-1,0,0]),vertexCount:36};var E=1e-6,A=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var r=0,e=arguments.length;e--;)r+=arguments[e]*arguments[e];return Math.sqrt(r)});function U(){var r=new A(16);return A!=Float32Array&&(r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0),r[0]=1,r[5]=1,r[10]=1,r[15]=1,r}function q(r){return r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}function G(r,e,i){var n=e[0],t=e[1],a=e[2],s=e[3],c=e[4],f=e[5],o=e[6],v=e[7],p=e[8],x=e[9],l=e[10],w=e[11],m=e[12],M=e[13],P=e[14],z=e[15],h=i[0],d=i[1],g=i[2],y=i[3];return r[0]=h*n+d*c+g*p+y*m,r[1]=h*t+d*f+g*x+y*M,r[2]=h*a+d*o+g*l+y*P,r[3]=h*s+d*v+g*w+y*z,h=i[4],d=i[5],g=i[6],y=i[7],r[4]=h*n+d*c+g*p+y*m,r[5]=h*t+d*f+g*x+y*M,r[6]=h*a+d*o+g*l+y*P,r[7]=h*s+d*v+g*w+y*z,h=i[8],d=i[9],g=i[10],y=i[11],r[8]=h*n+d*c+g*p+y*m,r[9]=h*t+d*f+g*x+y*M,r[10]=h*a+d*o+g*l+y*P,r[11]=h*s+d*v+g*w+y*z,h=i[12],d=i[13],g=i[14],y=i[15],r[12]=h*n+d*c+g*p+y*m,r[13]=h*t+d*f+g*x+y*M,r[14]=h*a+d*o+g*l+y*P,r[15]=h*s+d*v+g*w+y*z,r}function T(r,e,i){var n=i[0],t=i[1],a=i[2],s,c,f,o,v,p,x,l,w,m,M,P;return e===r?(r[12]=e[0]*n+e[4]*t+e[8]*a+e[12],r[13]=e[1]*n+e[5]*t+e[9]*a+e[13],r[14]=e[2]*n+e[6]*t+e[10]*a+e[14],r[15]=e[3]*n+e[7]*t+e[11]*a+e[15]):(s=e[0],c=e[1],f=e[2],o=e[3],v=e[4],p=e[5],x=e[6],l=e[7],w=e[8],m=e[9],M=e[10],P=e[11],r[0]=s,r[1]=c,r[2]=f,r[3]=o,r[4]=v,r[5]=p,r[6]=x,r[7]=l,r[8]=w,r[9]=m,r[10]=M,r[11]=P,r[12]=s*n+v*t+w*a+e[12],r[13]=c*n+p*t+m*a+e[13],r[14]=f*n+x*t+M*a+e[14],r[15]=o*n+l*t+P*a+e[15]),r}function F(r,e,i){var n=i[0],t=i[1],a=i[2];return r[0]=e[0]*n,r[1]=e[1]*n,r[2]=e[2]*n,r[3]=e[3]*n,r[4]=e[4]*t,r[5]=e[5]*t,r[6]=e[6]*t,r[7]=e[7]*t,r[8]=e[8]*a,r[9]=e[9]*a,r[10]=e[10]*a,r[11]=e[11]*a,r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15],r}function R(r,e,i){var n=Math.sin(i),t=Math.cos(i),a=e[4],s=e[5],c=e[6],f=e[7],o=e[8],v=e[9],p=e[10],x=e[11];return e!==r&&(r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=e[3],r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r[4]=a*t+o*n,r[5]=s*t+v*n,r[6]=c*t+p*n,r[7]=f*t+x*n,r[8]=o*t-a*n,r[9]=v*t-s*n,r[10]=p*t-c*n,r[11]=x*t-f*n,r}function u(r,e,i){var n=Math.sin(i),t=Math.cos(i),a=e[0],s=e[1],c=e[2],f=e[3],o=e[8],v=e[9],p=e[10],x=e[11];return e!==r&&(r[4]=e[4],r[5]=e[5],r[6]=e[6],r[7]=e[7],r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r[0]=a*t-o*n,r[1]=s*t-v*n,r[2]=c*t-p*n,r[3]=f*t-x*n,r[8]=a*n+o*t,r[9]=s*n+v*t,r[10]=c*n+p*t,r[11]=f*n+x*t,r}function L(r,e,i){var n=Math.sin(i),t=Math.cos(i),a=e[0],s=e[1],c=e[2],f=e[3],o=e[4],v=e[5],p=e[6],x=e[7];return e!==r&&(r[8]=e[8],r[9]=e[9],r[10]=e[10],r[11]=e[11],r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=e[15]),r[0]=a*t+o*n,r[1]=s*t+v*n,r[2]=c*t+p*n,r[3]=f*t+x*n,r[4]=o*t-a*n,r[5]=v*t-s*n,r[6]=p*t-c*n,r[7]=x*t-f*n,r}function D(r,e,i,n,t){var a=1/Math.tan(e/2),s;return r[0]=a/i,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=a,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[11]=-1,r[12]=0,r[13]=0,r[15]=0,t!=null&&t!==1/0?(s=1/(n-t),r[10]=(t+n)*s,r[14]=2*t*n*s):(r[10]=-1,r[14]=-2*n),r}var N=D;function Y(r,e,i,n){var t,a,s,c,f,o,v,p,x,l,w=e[0],m=e[1],M=e[2],P=n[0],z=n[1],h=n[2],d=i[0],g=i[1],y=i[2];return Math.abs(w-d)<E&&Math.abs(m-g)<E&&Math.abs(M-y)<E?q(r):(v=w-d,p=m-g,x=M-y,l=1/Math.hypot(v,p,x),v*=l,p*=l,x*=l,t=z*x-h*p,a=h*v-P*x,s=P*p-z*v,l=Math.hypot(t,a,s),l?(l=1/l,t*=l,a*=l,s*=l):(t=0,a=0,s=0),c=p*s-x*a,f=x*t-v*s,o=v*a-p*t,l=Math.hypot(c,f,o),l?(l=1/l,c*=l,f*=l,o*=l):(c=0,f=0,o=0),r[0]=t,r[1]=c,r[2]=v,r[3]=0,r[4]=a,r[5]=f,r[6]=p,r[7]=0,r[8]=s,r[9]=o,r[10]=x,r[11]=0,r[12]=-(t*w+a*m+s*M),r[13]=-(c*w+f*m+o*M),r[14]=-(v*w+p*m+x*M),r[15]=1,r)}function j(){var r=new A(3);return A!=Float32Array&&(r[0]=0,r[1]=0,r[2]=0),r}function B(r,e,i){var n=new A(3);return n[0]=r,n[1]=e,n[2]=i,n}(function(){var r=j();return function(e,i,n,t,a,s){var c,f;for(i||(i=3),n||(n=0),t?f=Math.min(t*i+n,e.length):f=e.length,c=n;c<f;c+=i)r[0]=e[c],r[1]=e[c+1],r[2]=e[c+2],a(r,r,s),e[c]=r[0],e[c+1]=r[1],e[c+2]=r[2];return e}})();function O(r,e,i,n){const t=I(e,i,n),a=k(r),s=U();return G(s,a,t),s}function I(r={x:0,y:0,z:0},e={x:0,y:0,z:0},i={x:1,y:1,z:1}){const n=U();return T(n,n,B(r.x,r.y,r.z)),R(n,n,e.x),u(n,n,e.y),L(n,n,e.z),F(n,n,B(i.x,i.y,i.z)),n}const W=B(0,0,0),_=B(0,1,0);function k(r,e=60/180*Math.PI,i=.1,n=100,t={x:0,y:0,z:0}){const a=U(),s=B(t.x,t.y,t.z);T(a,a,s),Y(a,s,W,_);const c=U();return N(c,e,r,i,n),G(c,c,a),c}async function K(r){const{device:e,context:i,pipeline:n,canvasSize:t}=await H(r),a=Z(e,n);let s=t.width/t.height;const c={x:2,y:0,z:-8},f={x:0,y:0,z:0},o={x:1,y:1,z:1},v={x:-2,y:0,z:-8},p={x:0,y:0,z:0},x={x:1,y:1,z:1};let l=!1;function w(){l=!0}function m(){if(l)return;const M=Date.now()/1e3;{f.x=Math.sin(M),f.y=Math.cos(M);const P=O(s,c,f,o);e.queue.writeBuffer(a.group1.buffer,0,P)}{p.x=Math.cos(M),p.y=Math.sin(M);const P=O(s,v,p,x);e.queue.writeBuffer(a.group2.buffer,0,P)}J(e,i,n,a,t),requestAnimationFrame(m)}return m(),w}async function H(r){var o,v;const{gpu:e}=navigator,i=await((o=e==null?void 0:e.requestAdapter)==null?void 0:o.call(e,{}));if(!i)throw Error("WebGPU not support! Adapter not found!");const n=(v=e.getPreferredCanvasFormat)==null?void 0:v.call(e);if(!n)throw Error("WebGPU not support! Adapter not found!");const t=await i.requestDevice(),a=r.getContext("webgpu"),{devicePixelRatio:s=1}=window,c={width:r.clientWidth*s,height:r.clientHeight*s};Object.assign(r,c),a.configure({device:t,format:n,alphaMode:"opaque"});const f=await X(t,n);return{device:t,context:a,format:n,canvasSize:c,pipeline:f}}function X(r,e){return r.createRenderPipelineAsync({vertex:{module:r.createShaderModule({code:b}),entryPoint:"main",buffers:[{attributes:[{shaderLocation:0,offset:0,format:"float32x3"},{shaderLocation:1,offset:3*4,format:"float32x2"}],arrayStride:4*5,stepMode:"vertex"}]},fragment:{module:r.createShaderModule({code:S}),entryPoint:"main",targets:[{format:e}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"},layout:"auto"})}function Z(r,e){const i=r.createBuffer({size:V.vertex.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});r.queue.writeBuffer(i,0,V.vertex,0,V.vertex.length);const n=C(r,e),t=C(r,e);return{vertexBuffer:i,group1:n,group2:t}}function C(r,e){const i=r.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),n=r.createBindGroup({layout:e.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:i}}]});return{buffer:i,group:n}}function J(r,e,i,n,t){const a=r.createCommandEncoder(),c=r.createTexture({size:t,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}).createView(),f=a.beginRenderPass({colorAttachments:[{view:e.getCurrentTexture().createView(),clearValue:{r:0,g:.5,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:c,depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}});f.setPipeline(i),f.setVertexBuffer(0,n.vertexBuffer),f.setBindGroup(0,n.group1.group),f.draw(V.vertexCount),f.setBindGroup(0,n.group2.group),f.draw(V.vertexCount),f.end(),r.queue.submit([a.finish()])}export{K as render};
