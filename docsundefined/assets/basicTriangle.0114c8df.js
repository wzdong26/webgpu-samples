import{p as s,u as b,v as c,c as f,a as G}from"./triangle.f5e91035.js";import{o as C}from"./resizeObserver.84f51a4b.js";var E=`@vertex
fn main(@location(0) position : vec3<f32>) -> @builtin(position) vec4<f32> {
    return vec4<f32>(position, 1.0);
}`,R=`@group(0) @binding(0) var<uniform> color : vec4<f32>;

@fragment
fn main() -> @location(0) vec4<f32> {
    return color;
}`;function z(t){return S(t)}async function S(t){var h,v;const{gpu:r}=navigator,u=await((h=r==null?void 0:r.requestAdapter)==null?void 0:h.call(r,{}));if(!u)throw Error("WebGPU not support! Adapter not found!");const a=(v=r.getPreferredCanvasFormat)==null?void 0:v.call(r);if(!a)throw Error("WebGPU not support! Adapter not found!");const e=await u.requestDevice(),d=t.getContext("webgpu"),{devicePixelRatio:n=1}=window;d.configure({device:e,format:a,alphaMode:"premultiplied"});const l=e.createRenderPipeline({vertex:{module:e.createShaderModule({code:E}),entryPoint:"main",buffers:[{attributes:[{shaderLocation:0,offset:0,format:`float32x${s}`},{shaderLocation:1,offset:4*s,format:`float32x${b}`}],arrayStride:4*(s+b),stepMode:"vertex"}]},fragment:{module:e.createShaderModule({code:R}),entryPoint:"main",targets:[{format:a}]},primitive:{topology:"triangle-list"},layout:"auto"}),p=e.createBuffer({size:c.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(p,0,c,0,c.length);const g=e.createBuffer({size:f.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(g,0,f,0,f.length);const w=e.createBindGroup({layout:l.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:g}}]}),P=()=>{const i=e.createCommandEncoder(),o=i.beginRenderPass({colorAttachments:[{view:d.getCurrentTexture().createView(),clearValue:{r:.5,g:.5,b:.5,a:1},loadOp:"clear",storeOp:"store"}]});o.setPipeline(l),o.setVertexBuffer(0,p),o.setBindGroup(0,w),o.draw(G),o.end(),e.queue.submit([i.finish()])},m=i=>{const{width:o,height:x,clientHeight:B,clientWidth:U}=t;if(i&&o===U*n&&x===B*n)return;const y={width:t.clientWidth*n,height:t.clientHeight*n};Object.assign(t,y),P()};return m(),C(t,m)}export{z as render};
